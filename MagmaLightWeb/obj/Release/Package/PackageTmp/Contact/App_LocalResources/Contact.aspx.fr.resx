<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnSend.Text" xml:space="preserve">
    <value>Envoyer</value>
  </data>
  <data name="lblAnswer1.Text" xml:space="preserve">
    <value>En fonction de la hauteur et de la disposition de la pièce, il peut purifier en moyenne une surface de 10 à 15 m2.</value>
  </data>
  <data name="lblAnswer2.Text" xml:space="preserve">
    <value>Dans tous les cas où vous nous renvoyez le produit commandé dans un délai de 30 jours (les frais de l’envoi sont à votre charge), nous vous remboursons le prix du produit.</value>
  </data>
  <data name="lblAnswer3.Text" xml:space="preserve">
    <value>Étant donné que l’ampoule rayon soleil dispose du taux le plus élevé du rendement solaire, nous vous recommandons absolument ce type d’ampoule mais seulement dans le cas où vous n’avez pas besoin de purificateur d’air.</value>
  </data>
  <data name="lblAnswer4.Text" xml:space="preserve">
    <value>L’ioniseur ne nécessite que 5 à 10 minutes afin d’améliorer la qualité de l’air. Voir la vidéo présentant le fonctionnement de l’ioniseur en cliquant sur l’onglet « Télécharger ».</value>
  </data>
  <data name="lblAnswer5.Text" xml:space="preserve">
    <value>Oui. Dans le cas où vous commandez une quantité supérieure à 3, 7, ou 15 pièces par type d’ampoule, nous vous offrons respectivement 5, 10 ou 15 % de réduction.</value>
  </data>
  <data name="lblAnswer6.Text" xml:space="preserve">
    <value>L’adresse de la société : iSequence LLC, 1308 Delaware Avenue, Wilmington, DE 19806, USA.</value>
  </data>
  <data name="lblContactEmail.Text" xml:space="preserve">
    <value>Courriel</value>
  </data>
  <data name="lblContactFax.Text" xml:space="preserve">
    <value>Fax</value>
  </data>
  <data name="lblContactName.Text" xml:space="preserve">
    <value>Nom</value>
  </data>
  <data name="lblContactPhone.Text" xml:space="preserve">
    <value>Téléphone</value>
  </data>
  <data name="lblCountryContactPerson.Text" xml:space="preserve">
    <value>Votre représentant local</value>
  </data>
  <data name="lblHeader.Text" xml:space="preserve">
    <value>Contact</value>
  </data>
  <data name="lblMessage.Text" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="lblQA.Text" xml:space="preserve">
    <value>Avant de nous écrire : veuillez consulter les questions fréquemment posées</value>
  </data>
  <data name="lblQuestion1.Text" xml:space="preserve">
    <value>Quelle est la surface optimum que l’ioniseur est capable de purifier ?</value>
  </data>
  <data name="lblQuestion2.Text" xml:space="preserve">
    <value>Dans quel cas la garantie de remboursement peut-elle être appliquée ?</value>
  </data>
  <data name="lblQuestion3.Text" xml:space="preserve">
    <value>Je cultive des plantes, j’élève des oiseaux, des reptiles, quel type d’ampoule me conseillez-vous ?</value>
  </data>
  <data name="lblQuestion4.Text" xml:space="preserve">
    <value>Après combien de temps peut-on sentir l’effet bénéfique de l’ioniseur ?</value>
  </data>
  <data name="lblQuestion5.Text" xml:space="preserve">
    <value>Existe-t-il une promotion en fonction de la quantité achetée ?</value>
  </data>
  <data name="lblQuestion6.Text" xml:space="preserve">
    <value>Quelle est la société qui assure le service de facturation ?</value>
  </data>
  <data name="lblSenderEmail.Text" xml:space="preserve">
    <value>Votre adresse e-mail</value>
  </data>
  <data name="lblSendMessage.Text" xml:space="preserve">
    <value>Envoyer</value>
  </data>
  <data name="lblThankYou.Text" xml:space="preserve">
    <value>Votre message a été envoyé</value>
  </data>
  <data name="page.Title" xml:space="preserve">
    <value>Contact - Lampe soleil</value>
  </data>
</root>